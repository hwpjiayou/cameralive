#ifndef _LOOP_QUEUE_H_
#define _LOOP_QUEUE_H_

#include <iostream>

using namespace std;

/************************************************************************/
/* 循环队列的实现 用于存储 音频数据 使用byte数组                                                                     */
/************************************************************************/

class LoopQueue
{
private:
	uint8_t* data;	//队列数组
	int len;	//队列的长度 能存储的数据最大为len - 1
	int start;	//指向第一个数据的下标
	int end;	//指向最后一个数据则下一个下标

public:
	/************************************************************************/
	/* 构造函数 size为存储的数据的最大长度                                                                     */
	/************************************************************************/
	LoopQueue(int);
	~LoopQueue();

	/************************************************************************/
	/* 得到 下标 长度 和 小标对应的值                                                                     */
	/************************************************************************/
	int get_start();
	int get_end();
	int get_len();
	uint8_t get_byte(int);

	/************************************************************************/
	/* 是否为空                                                                     */
	/************************************************************************/
	bool empty();

	/************************************************************************/
	/* 队列是否已满                                                                     */
	/************************************************************************/
	bool full();

	/************************************************************************/
	/* 存储的数据的个数 byte的个数                                                                     */
	/************************************************************************/
	int size();

	/**
	 * 返回第一个byte
	 */
	uint8_t front();

	/************************************************************************/
	/* 压入 一个数据 如果当前队列是满的 直接返回false                                                                     */
	/************************************************************************/
	bool push(uint8_t);

	/************************************************************************/
	/* 弹出一个 数据 当前队列是空的 返回false                                                                     */
	/************************************************************************/
	bool pop();

	/************************************************************************/
	/* 清空队列                                                                     */
	/************************************************************************/
	void clear();
};

#endif
